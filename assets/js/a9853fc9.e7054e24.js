"use strict";(self.webpackChunkciroh_docusite=self.webpackChunkciroh_docusite||[]).push([[598],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,g=d["".concat(c,".").concat(m)]||d[m]||s[m]||a;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4422:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:3},i="Run ngen manually",l={unversionedId:"services/ngen_manual_run",id:"services/ngen_manual_run",title:"Run ngen manually",description:"For running ngen on local machine manually:",source:"@site/docs/services/ngen_manual_run.md",sourceDirName:"services",slug:"/services/ngen_manual_run",permalink:"/docs/services/ngen_manual_run",draft:!1,editUrl:"https://github.com/arpita0911patel/alabamawaterinstitute_website?path=/docs/services/ngen_manual_run.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"AWS - IAM - Creating User Groups and Adding Permissions:",permalink:"/docs/services/aws-iam-config"}},c={},u=[{value:"For running ngen on local machine manually:",id:"for-running-ngen-on-local-machine-manually",level:2}],p={toc:u};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"run-ngen-manually"},"Run ngen manually"),(0,o.kt)("h2",{id:"for-running-ngen-on-local-machine-manually"},"For running ngen on local machine manually:"),(0,o.kt)("p",null,"Below are the steps performed on UAHPC server:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Load Modules if not present:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ module load boost/1.72.0\n$ module load cmake/3.20.1\n$ module load python/python3/3.9.6\n")),(0,o.kt)("h1",{id:"module-list"},"module list"),(0,o.kt)("p",null,"Currently Loaded Modulefiles:\n1) compilers/gcc/5.4.0   3) compilers/gcc/9.1.0   5) python/python3/3.9.6",(0,o.kt)("br",{parentName:"p"}),"\n","2) boost/1.72.0          4) cmake/3.20.1        "),(0,o.kt)("p",null,"Key:"),(0,o.kt)("h1",{id:"1-2-auto-loaded"},"1) 2) auto-loaded"),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Export env variables:")),(0,o.kt)("p",null,"$ export CC=/share/apps/gcc/9.1.0/bin/gcc\n$ export CXX=/share/apps/gcc/9.1.0/bin/g++"),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Load mpi library:\n$ module load mpi/openmpi/gcc/4.1.1")),(0,o.kt)("p",null,"#=============================================================================\n4. To Build ngen:\n#============================================================================="),(0,o.kt)("p",null,"$ git clone ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/NOAA-OWP/ngen.git"},"https://github.com/NOAA-OWP/ngen.git"),"\n$ cd ngen\n$ git submodule update --init --recursive -- test/googletest\n$ git submodule update --init --recursive -- extern/pybind11"),(0,o.kt)("p",null,"$ cmake -B ./mpibuild -S . -DMPI_ACTIVE=ON\n$ cd mpibuild\n$ cmake --build . --target ngen"),(0,o.kt)("h1",{id:"to-build-partitiongenerator-in-build-directory"},"to build partitionGenerator (in build directory)"),(0,o.kt)("p",null,"$ make partitionGenerator"),(0,o.kt)("h1",{id:"to-generate-partition-config-in-data-directory"},"to generate partition config (in data directory)"),(0,o.kt)("p",null,"$ cd ../data"),(0,o.kt)("p",null,"$ ../mpibuild/partitionGenerator catchment_data.geojson nexus_data.geojson partition_config.json 4 '' ''"),(0,o.kt)("h1",{id:"in-data-directory"},"in data directory"),(0,o.kt)("p",null,"$ ln -s example_realization_config.json realization_config.json"),(0,o.kt)("p",null,"#=============================================================================\n4. To Run ngen:\n#=============================================================================\n4.1 Prepare script:\n$ cd ngen\n$ vim myscript.sh"),(0,o.kt)("p",null,"Enter below lines in the file:\n#!/bin/bash\n#SBATCH --mem-per-cpu 4000\n#SBATCH -n 4\n#SBATCH -o output.log\n#SBATCH --qos main"),(0,o.kt)("p",null,"module load boost/1.72.0\nmodule load cmake/3.20.1\nmodule load python/python3/3.9.6\nmodule load mpi/openmpi/gcc/4.1.1\nexport CC=/share/apps/gcc/9.1.0/bin/gcc\nexport CXX=/share/apps/gcc/9.1.0/bin/g++"),(0,o.kt)("p",null,'srun --mpi=pmi2 ./mpibuild/ngen ./data/catchment_data.geojson "" ./data/nexus_data.geojson "" ./data/realization_config.json ./data/partition_config.json'),(0,o.kt)("p",null,"4.2 Run from ngen directory\n$ sbatch myscript.sh"),(0,o.kt)("p",null,"Output example:"))}s.isMDXComponent=!0}}]);